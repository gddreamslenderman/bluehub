local Players = game:GetService("Players")

-- Add highlight to character
local function addHighlight(character)
	if not character:FindFirstChild("Highlight") then
		local highlight = Instance.new("Highlight")
		highlight.Name = "Highlight"
		highlight.FillColor = Color3.fromRGB(255, 0, 0)
		highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
		highlight.FillTransparency = 0.5
		highlight.OutlineTransparency = 0
		highlight.Adornee = character
		highlight.Parent = character
	end
end

-- Add nametag with numeric health meter
local function addNameTag(character, player)
	local head = character:WaitForChild("Head", 5)
	local humanoid = character:WaitForChild("Humanoid", 5)
	if not head or not humanoid then return end

	if not head:FindFirstChild("NameTag") then
		local tag = Instance.new("BillboardGui")
		tag.Name = "NameTag"
		tag.Size = UDim2.new(0, 100, 0, 50)
		tag.StudsOffset = Vector3.new(0, 2.5, 0)
		tag.AlwaysOnTop = true
		tag.Adornee = head
		tag.Parent = head

		local nameLabel = Instance.new("TextLabel")
		nameLabel.Size = UDim2.new(1, 0, 1, 0)
		nameLabel.BackgroundTransparency = 1
		nameLabel.TextScaled = true
		nameLabel.Font = Enum.Font.SourceSansBold
		nameLabel.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green
		nameLabel.TextStrokeTransparency = 0.5
		nameLabel.Parent = tag

		-- Update health number live
		local function updateName()
			local currentHealth = math.floor(humanoid.Health)
			local maxHealth = math.floor(humanoid.MaxHealth)
			nameLabel.Text = string.format("%s [%d / %d]", player.Name, currentHealth, maxHealth)
		end

		humanoid.HealthChanged:Connect(updateName)
		updateName()
	end
end

-- Set up visuals for character
local function setupCharacter(player)
	local function apply(character)
		addHighlight(character)
		addNameTag(character, player)
	end

	if player.Character then
		apply(player.Character)
	end

	player.CharacterAdded:Connect(apply)
end

-- Apply to all players
for _, player in ipairs(Players:GetPlayers()) do
	setupCharacter(player)
end

Players.PlayerAdded:Connect(setupCharacter)


-- Listen for the toggle event from the client
toggleEvent.OnServerEvent:Connect(function(player)
    toggleHighlighting()
end)
